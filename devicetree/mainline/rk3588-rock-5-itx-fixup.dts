// SPDX-License-Identifier: (GPL-2.0+ OR MIT)

#include <dt-bindings/soc/rockchip,vop2.h>
#include "rk3588-rock-5-itx.dts"

/ {
	/delete-node/ pcie-oscillator;

	hdmi0-con {
		compatible = "hdmi-connector";
		type = "a";

		port {
			hdmi0_con_in: endpoint {
				remote-endpoint = <&hdmi0_out_con>;
			};
		};
	};
};

/*
 * Remove the "pcie30_refclk" gated-fixed-clock to maintain compatibility
 * with kernels older than v6.13-rc1. It is backed by a GPIO regulator
 * anyway, so simply referencing it in vpcie3v3-supply also addresses
 * the potential issue where pcie3x2 might probe earlier than pcie3x4 and
 * hang on DBI access because the clock didn't have a chance to be enabled.
 */
&pcie3x2 {
	clocks = <&cru ACLK_PCIE_2L_MSTR>, <&cru ACLK_PCIE_2L_SLV>,
		 <&cru ACLK_PCIE_2L_DBI>, <&cru PCLK_PCIE_2L>,
		 <&cru CLK_PCIE_AUX1>, <&cru CLK_PCIE2L_PIPE>;
	clock-names = "aclk_mst", "aclk_slv",
		      "aclk_dbi", "pclk",
		      "aux", "pipe";
	vpcie3v3-supply = <&vcc3v3_pi6c_05>;
};

&pcie3x4 {
	clocks = <&cru ACLK_PCIE_4L_MSTR>, <&cru ACLK_PCIE_4L_SLV>,
		 <&cru ACLK_PCIE_4L_DBI>, <&cru PCLK_PCIE_4L>,
		 <&cru CLK_PCIE_AUX0>, <&cru CLK_PCIE4L_PIPE>;
	clock-names = "aclk_mst", "aclk_slv",
		      "aclk_dbi", "pclk",
		      "aux", "pipe";
};

&hdmi0 {
	status = "okay";
};

&hdmi0_in {
	hdmi0_in_vp0: endpoint {
		remote-endpoint = <&vp0_out_hdmi0>;
	};
};

&hdmi0_out {
	hdmi0_out_con: endpoint {
		remote-endpoint = <&hdmi0_con_in>;
	};
};

&hdptxphy_hdmi0 {
	status = "okay";
};

&vop_mmu {
	status = "okay";
};

&vop {
	status = "okay";
};

&vp0 {
	vp0_out_hdmi0: endpoint@ROCKCHIP_VOP2_EP_HDMI0 {
		reg = <ROCKCHIP_VOP2_EP_HDMI0>;
		remote-endpoint = <&hdmi0_in_vp0>;
	};
};
